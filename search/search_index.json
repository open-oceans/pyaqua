{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pyaqua: Simple CLI for Aqualink.org API \u00b6 Aqualink is a philanthropic engineering organization working on building ocean conservation technology. Read more about their inspiration, smart buoy, and web application . This tool is designed to help interact programmatically with the Aqualink.org map and is not based on any official API so expect features to break once in a while. Disclaimer: This is an unofficial tool. Is not licensed or endorsed by Aqualink org. It is created and maintained by Samapriya Roy. Citation \u00b6 Samapriya Roy. (2022). samapriya/pyaqua: Simple CLI for Aqualink Org (0.1.0). Zenodo. https://doi.org/10.5281/zenodo.7123727","title":"Introduction"},{"location":"#pyaqua-simple-cli-for-aqualinkorg-api","text":"Aqualink is a philanthropic engineering organization working on building ocean conservation technology. Read more about their inspiration, smart buoy, and web application . This tool is designed to help interact programmatically with the Aqualink.org map and is not based on any official API so expect features to break once in a while. Disclaimer: This is an unofficial tool. Is not licensed or endorsed by Aqualink org. It is created and maintained by Samapriya Roy.","title":"pyaqua: Simple CLI for Aqualink.org API"},{"location":"#citation","text":"Samapriya Roy. (2022). samapriya/pyaqua: Simple CLI for Aqualink Org (0.1.0). Zenodo. https://doi.org/10.5281/zenodo.7123727","title":"Citation"},{"location":"changelog/","text":"Changelog \u00b6 v0.1.0 \u00b6 Fixed issue with Boolean value for payload Fixed metadata parsing and improved logic for time series export Both time series and daily data now support export Both time series and daily data now supports custom date ranges v0.0.9 \u00b6 now includes support for hobo sensors added site list filter for device type breakdown modified site alert tool to pull from all sites and by device type general improvements v0.0.8 \u00b6 added site-argo tool for argofloat exports for sites v0.0.7 \u00b6 added readme tool to CLI for browser redirect v0.0.6 \u00b6 added site alert tool v0.0.5 \u00b6 added status filter to site-list tool added lat long for site-timeseries export v0.0.4 \u00b6 Fixed tool descriptor for timeseries tool. v0.0.3 \u00b6 Added site info tool for detailed information on site. v0.0.2 \u00b6 Added readme and created new branch.","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#v010","text":"Fixed issue with Boolean value for payload Fixed metadata parsing and improved logic for time series export Both time series and daily data now support export Both time series and daily data now supports custom date ranges","title":"v0.1.0"},{"location":"changelog/#v009","text":"now includes support for hobo sensors added site list filter for device type breakdown modified site alert tool to pull from all sites and by device type general improvements","title":"v0.0.9"},{"location":"changelog/#v008","text":"added site-argo tool for argofloat exports for sites","title":"v0.0.8"},{"location":"changelog/#v007","text":"added readme tool to CLI for browser redirect","title":"v0.0.7"},{"location":"changelog/#v006","text":"added site alert tool","title":"v0.0.6"},{"location":"changelog/#v005","text":"added status filter to site-list tool added lat long for site-timeseries export","title":"v0.0.5"},{"location":"changelog/#v004","text":"Fixed tool descriptor for timeseries tool.","title":"v0.0.4"},{"location":"changelog/#v003","text":"Added site info tool for detailed information on site.","title":"v0.0.3"},{"location":"changelog/#v002","text":"Added readme and created new branch.","title":"v0.0.2"},{"location":"installation/","text":"General Installation \u00b6 This assumes that you have native python & pip installed in your system, you can test this by going to the terminal (or windows command prompt) and trying python and then pip list pyaqua only support Python v3.7 or higher To install pyaqua: Simple CLI for Aqualink API you can install using two methods. pip install pyaqua or you can also try git clone https://github.com/samapriya/pyaqua.git cd pyaqua python setup.py install For Linux use sudo or try pip install pyaqua --user . I recommend installation within a virtual environment. Find more information on creating virtual environments here . Getting started \u00b6 As usual, to print help: usage: pyaqua [-h] {site-list,site-live,site-daily,site-timeseries} ... Simple CLI for Aqualink API positional arguments: {site-list,site-info,site-live,site-daily,site-timeseries} site-list Print lists of Site Name and ID with spotters site-info Print detailed information for a site site-live Get most recent/live info from a site site-daily Print daily data info for a site site-timeseries Exports timeseries data for a site optional arguments: -h, --help show this help message and exit To obtain help for specific functionality, simply call it with help switch, e.g.: pyaqua site-live -h . If you didn't install pyaqua, then you can run it just by going to pyaqua directory and running python pyaqua.py [arguments go here]","title":"General Installation"},{"location":"installation/#general-installation","text":"This assumes that you have native python & pip installed in your system, you can test this by going to the terminal (or windows command prompt) and trying python and then pip list pyaqua only support Python v3.7 or higher To install pyaqua: Simple CLI for Aqualink API you can install using two methods. pip install pyaqua or you can also try git clone https://github.com/samapriya/pyaqua.git cd pyaqua python setup.py install For Linux use sudo or try pip install pyaqua --user . I recommend installation within a virtual environment. Find more information on creating virtual environments here .","title":"General Installation"},{"location":"installation/#getting-started","text":"As usual, to print help: usage: pyaqua [-h] {site-list,site-live,site-daily,site-timeseries} ... Simple CLI for Aqualink API positional arguments: {site-list,site-info,site-live,site-daily,site-timeseries} site-list Print lists of Site Name and ID with spotters site-info Print detailed information for a site site-live Get most recent/live info from a site site-daily Print daily data info for a site site-timeseries Exports timeseries data for a site optional arguments: -h, --help show this help message and exit To obtain help for specific functionality, simply call it with help switch, e.g.: pyaqua site-live -h . If you didn't install pyaqua, then you can run it just by going to pyaqua directory and running python pyaqua.py [arguments go here]","title":"Getting started"},{"location":"license/","text":"Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and \u00a9 You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [2021] [Samapriya Roy] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"projects/site-alert/","text":"Site alert for sites \u00b6 The site alert tool parses data from each device type or all sites keeping in consideration the temperature alert level data. You can now filter by device type spotters/hobo loggers. pyaqua site-alert -h usage: pyaqua site-alert [-h] [--level {0,1,2,3,4}] [--device DEVICE] optional arguments: -h, --help show this help message and exit Optional named arguments: --level {0,1,2,3,4} Level 0-4 no-alert|watch|warning|Level-1|Level-2 --device DEVICE spotter|hobo","title":"Site alert for sites"},{"location":"projects/site-alert/#site-alert-for-sites","text":"The site alert tool parses data from each device type or all sites keeping in consideration the temperature alert level data. You can now filter by device type spotters/hobo loggers. pyaqua site-alert -h usage: pyaqua site-alert [-h] [--level {0,1,2,3,4}] [--device DEVICE] optional arguments: -h, --help show this help message and exit Optional named arguments: --level {0,1,2,3,4} Level 0-4 no-alert|watch|warning|Level-1|Level-2 --device DEVICE spotter|hobo","title":"Site alert for sites"},{"location":"projects/site-argo/","text":"Argofloat data for Site \u00b6 This tool uses the argofloats CLI to get coincident argofloats data per site. It uses the start and end date specified and a search radius around the site latitude and longitude. Default search radius is a 1000 kilometers and the exports are in a CSV format with format argofloats_profileID pyaqua site-argo -h usage: pyaqua site-argo [-h] --sid SID --start START --end END --fpath FPATH [--radius RADIUS] optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID --start START Start date in format YYYY-MM-DD --end END End date in format YYYY-MM-DD --fpath FPATH Folder path for export Optional named arguments: --radius RADIUS Search radius in kilometers","title":"Argofloat data for Site"},{"location":"projects/site-argo/#argofloat-data-for-site","text":"This tool uses the argofloats CLI to get coincident argofloats data per site. It uses the start and end date specified and a search radius around the site latitude and longitude. Default search radius is a 1000 kilometers and the exports are in a CSV format with format argofloats_profileID pyaqua site-argo -h usage: pyaqua site-argo [-h] --sid SID --start START --end END --fpath FPATH [--radius RADIUS] optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID --start START Start date in format YYYY-MM-DD --end END End date in format YYYY-MM-DD --fpath FPATH Folder path for export Optional named arguments: --radius RADIUS Search radius in kilometers","title":"Argofloat data for Site"},{"location":"projects/site-daily/","text":"Daily Data for Site \u00b6 This allows to get the most daily data for a site based on a site ID from the idlist. The tool parses the daily output as an indented JSON and you can specify months since today as well as data type like wind/wave/temp. It also supports export as CSV and custom date ranges since v0.1.0 pyaqua site-daily -h usage: pyaqua site-daily [-h] --sid SID [--months MONTHS] [--start START] [--end END] [--dtype DTYPE] [--fpath FPATH] optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID Optional named arguments: --months MONTHS Total number of months in the past from today (default=1) --start START Start date for daily data in format YYYY-MM-DD --end END End date for daily data in format YYYY-MM-DD --dtype DTYPE Data type: wind/wave/temp --fpath FPATH Full path to folder to export daily data as CSV","title":"Daily Data for Site"},{"location":"projects/site-daily/#daily-data-for-site","text":"This allows to get the most daily data for a site based on a site ID from the idlist. The tool parses the daily output as an indented JSON and you can specify months since today as well as data type like wind/wave/temp. It also supports export as CSV and custom date ranges since v0.1.0 pyaqua site-daily -h usage: pyaqua site-daily [-h] --sid SID [--months MONTHS] [--start START] [--end END] [--dtype DTYPE] [--fpath FPATH] optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID Optional named arguments: --months MONTHS Total number of months in the past from today (default=1) --start START Start date for daily data in format YYYY-MM-DD --end END End date for daily data in format YYYY-MM-DD --dtype DTYPE Data type: wind/wave/temp --fpath FPATH Full path to folder to export daily data as CSV","title":"Daily Data for Site"},{"location":"projects/site-info/","text":"Site information \u00b6 The site info tool uses the site ID to get detailed information about the setup, location, time zone, status information to name a few. Historical means are dropped along with admin data for ease of parsing and since they do not add a large amount of value for general purpose users directly. The user does have the option to get to the complete admin or historical data if needed pyaqua site-info -h usage: pyaqua site-info [-h] --sid SID [--extra EXTRA] optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID Optional named arguments: --extra EXTRA extra info keywords : historical/admins","title":"Site information"},{"location":"projects/site-info/#site-information","text":"The site info tool uses the site ID to get detailed information about the setup, location, time zone, status information to name a few. Historical means are dropped along with admin data for ease of parsing and since they do not add a large amount of value for general purpose users directly. The user does have the option to get to the complete admin or historical data if needed pyaqua site-info -h usage: pyaqua site-info [-h] --sid SID [--extra EXTRA] optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID Optional named arguments: --extra EXTRA extra info keywords : historical/admins","title":"Site information"},{"location":"projects/site-list/","text":"Site list and ID \u00b6 This allows you to get existing sites with spotters or hobo sensors and print Site Name and ID. These could be in different status of application including maintenance, deployed, lost, shipped and so on. The tool also applies a fuzzy search and allows you to look for a specific site to get site id. You can now filter using status as well so status types like maintenance, deployed, shipped or lost pyaqua site-list -h usage: pyaqua site-list [-h] [--name NAME] [--status STATUS] optional arguments: -h, --help show this help message and exit Optional named arguments: --name NAME Pass site name --status STATUS Site status from maintenance|deployed|shipped|lost","title":"Site list and ID"},{"location":"projects/site-list/#site-list-and-id","text":"This allows you to get existing sites with spotters or hobo sensors and print Site Name and ID. These could be in different status of application including maintenance, deployed, lost, shipped and so on. The tool also applies a fuzzy search and allows you to look for a specific site to get site id. You can now filter using status as well so status types like maintenance, deployed, shipped or lost pyaqua site-list -h usage: pyaqua site-list [-h] [--name NAME] [--status STATUS] optional arguments: -h, --help show this help message and exit Optional named arguments: --name NAME Pass site name --status STATUS Site status from maintenance|deployed|shipped|lost","title":"Site list and ID"},{"location":"projects/site-live/","text":"Site live update \u00b6 This allows to get the most updated/live information about a site based on a site ID from the idlist. The tool parses the output as an indent JSON object. pyaqua site-live -h usage: pyaqua site-live [-h] --sid SID optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID","title":"Site live update"},{"location":"projects/site-live/#site-live-update","text":"This allows to get the most updated/live information about a site based on a site ID from the idlist. The tool parses the output as an indent JSON object. pyaqua site-live -h usage: pyaqua site-live [-h] --sid SID optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID","title":"Site live update"},{"location":"projects/site-timeseries/","text":"Time Series data for Site \u00b6 This allows to get the most daily data for a site based on a site ID from the idlist. The tool exports the time series data for both NOAA and spotter datasets as CSV to a given folder. It attaches the site_id to the CSV filename spotter_dhw_siteid for example spotter_dhw_1113 . It Now supports custom date ranges since v0.1.0 pyaqua site-timeseries -h usage: pyaqua site-timeseries [-h] --sid SID --fpath FPATH [--months MONTHS] [--start START] [--end END] [--dtype DTYPE] optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID --fpath FPATH Folder path for export Optional named arguments: --months MONTHS Total number of months in the past from today (default=3) --start START Start date for daily data in format YYYY-MM-DD --end END End date for daily data in format YYYY-MM-DD --dtype DTYPE Data type: wind/wave/temp/sat_temp/alert/anomaly/dhw","title":"Time Series data for Site"},{"location":"projects/site-timeseries/#time-series-data-for-site","text":"This allows to get the most daily data for a site based on a site ID from the idlist. The tool exports the time series data for both NOAA and spotter datasets as CSV to a given folder. It attaches the site_id to the CSV filename spotter_dhw_siteid for example spotter_dhw_1113 . It Now supports custom date ranges since v0.1.0 pyaqua site-timeseries -h usage: pyaqua site-timeseries [-h] --sid SID --fpath FPATH [--months MONTHS] [--start START] [--end END] [--dtype DTYPE] optional arguments: -h, --help show this help message and exit Required named arguments.: --sid SID Site ID --fpath FPATH Folder path for export Optional named arguments: --months MONTHS Total number of months in the past from today (default=3) --start START Start date for daily data in format YYYY-MM-DD --end END End date for daily data in format YYYY-MM-DD --dtype DTYPE Data type: wind/wave/temp/sat_temp/alert/anomaly/dhw","title":"Time Series data for Site"}]}